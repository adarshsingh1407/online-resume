{"version":3,"sources":["components/common/FAIcon.jsx","components/WorkExperience/index.jsx","constants/index.js","App.jsx","serviceWorker.js","index.jsx"],"names":["FAIcon","this","props","icon","label","children","width","className","isEmpty","PureComponent","defaultProps","WorkExperience","workExp","positionLine1","positionLine2","startDate","endDate","company","kras","length","map","kra","key","RESUME_DETAIL","name","workExperiences","App","faPhoneAlt","href","faEnvelope","faMapMarkerAlt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77b7905b.chunk.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { isEmpty } from 'lodash'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass FAIcon extends PureComponent {\n  render() {\n    const { icon, label = '', children } = this.props\n    return (\n      <>\n        {icon && <FontAwesomeIcon width=\"10px\" icon={icon} className=\"mx-2\" />}\n        {!isEmpty(label) && <span>{label}</span>}\n        {children}\n      </>\n    )\n  }\n}\n\nFAIcon.propTypes = {\n  icon: PropTypes.object,\n  label: PropTypes.string,\n  children: PropTypes.element,\n}\n\nFAIcon.defaultProps = {\n  icon: null,\n  label: '',\n  children: null,\n}\n\nexport default FAIcon\n","/* eslint-disable react/forbid-prop-types */\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { isEmpty } from 'lodash'\n\nclass WorkExperience extends PureComponent {\n  render() {\n    const {\n      workExp: {\n        positionLine1 = '',\n        positionLine2 = '',\n        startDate = '',\n        endDate = '',\n        company = '',\n        kras = [],\n      } = {},\n    } = this.props\n    return (\n      <div className=\"container-xl pb-3\">\n        <div className=\"row card text-white bg-dark\">\n          <div className=\"custom-card-header\">\n            <div className=\"row\">\n              <div className=\"col-8 card-header-left job-title\">\n                {!isEmpty(positionLine1) && <div>{positionLine1}</div>}\n                {!isEmpty(positionLine2) && <div>{positionLine2}</div>}\n              </div>\n              <div className=\"col-4 card-header-right\">\n                <div className=\"float-right\">\n                  <div className=\"start-date text-center\">{startDate}</div>\n                  <div className=\"text-center\">{endDate}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>\n            <h5 className=\"card-title pt-1 text-center company-name\">\n              {company}\n            </h5>\n            <div className=\"col-12\">\n              <ul className=\"exp-details\">\n                {kras.length > 0 &&\n                  kras.map(kra => {\n                    return (\n                      <li key={kra} className=\"pt-1\">\n                        {kra}\n                      </li>\n                    )\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nWorkExperience.propTypes = {\n  workExp: PropTypes.object.isRequired,\n}\n\nexport default WorkExperience\n","export const RESUME_DETAIL = {\n  name: 'Adarsh Singh',\n  workExperiences: [\n    {\n      positionLine1: 'Associate Level 2',\n      positionLine2: 'Experience Technology',\n      startDate: 'May 2019',\n      endDate: 'Present',\n      company: 'Publicis Groupe (Sapient)',\n      kras: [\n        'Design and develop the front-end of e-commerce offerings for North America - Retail vertical.',\n      ],\n    },\n    {\n      positionLine1: 'Lead Software Developer',\n      positionLine2: '',\n      startDate: 'Jun 2018',\n      endDate: 'May 2019',\n      company: 'PetroIT, Chimes Pvt. Ltd.',\n      kras: [\n        'Led a team of skilled front-end developers to develop web apps used for inventory and personnel management of petroleum companies.',\n      ],\n    },\n  ],\n}\n\nexport const formatDate = () => {}\n","import React from 'react'\nimport { faPhoneAlt, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons'\nimport './App.css'\nimport FAIcon from './components/common/FAIcon'\nimport WorkExperience from './components/WorkExperience'\nimport { RESUME_DETAIL } from './constants'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-xl\">\n        <div className=\"jumbotron bg-primary\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-6\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <h1 className=\"heading text-uppercase\">\n                    {RESUME_DETAIL.name}\n                  </h1>\n                </div>\n                <div className=\"col-12\">\n                  <h2 className=\"sub-heading text-uppercase\">\n                    Experience Technologist\n                  </h2>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-12 col-md-6 text-right\">\n              <div className=\"row heading-position\">\n                <div className=\"col-12 text-uppercase\">Front-end Developer</div>\n                <div className=\"col-12 text-uppercase pt-2\">\n                  Full-stack Developer\n                </div>\n              </div>\n              <div className=\"row contact-info mt-4\">\n                <div className=\"col-12\">\n                  <FAIcon icon={faPhoneAlt}>\n                    <a className=\"contact-action\" href=\"tel:8800877179\">\n                      91-8800877179\n                    </a>\n                  </FAIcon>\n                </div>\n                <div className=\"col-12\">\n                  <FAIcon icon={faEnvelope}>\n                    <a\n                      className=\"contact-action\"\n                      href=\"mailto:adarshsingh1407@gmail.com\"\n                    >\n                      adarshsingh1407@gmail.com\n                    </a>\n                  </FAIcon>\n                </div>\n                <div className=\"col-12\">\n                  <FAIcon icon={faMapMarkerAlt} label=\"Gurgaon, IN\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container-xl\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-6\">\n              <h3 className=\"text-uppercase text-center section-heading\">\n                Work Experience (5 Years)\n              </h3>\n              <hr className=\"section-border\" />\n              {RESUME_DETAIL.workExperiences.map(workExp => {\n                return (\n                  <WorkExperience key={workExp.startDate} workExp={workExp} />\n                )\n              })}\n            </div>\n            <div className=\"col-12 col-md-6\">\n              <h3 className=\"text-uppercase text-center section-heading\">\n                Academic Background\n              </h3>\n              <hr className=\"section-border\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './styles/custom.scss'\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}